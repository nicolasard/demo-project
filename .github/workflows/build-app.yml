name: Build the app and create binary.

on: [push]

jobs:
  compile-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: false  # Set process.env.CI to false
    steps:
    - uses: actions/checkout@v3
    - name: Set up NPM
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - name: Install Dependencies
      run: npm install --force  # We shouldn't use force. Is just because some conflicts in the libs that need to be solved.
      working-directory: ./frontendv2
    - name: Build with npm
      run: npm run build 
      working-directory: ./frontendv2
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend-artifacts
        path: ./frontendv2/build
  compile-backend:
    needs: compile-frontend
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend-artifacts
        path: ./backend/src/main/resources/META-INF/resources
    - name: Check files updated
      run: ls -lht
      working-directory: ./backend/src/main/resources/META-INF/resources
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
      working-directory: ./backend
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $(date +'%Y-%m-%d')
        release_name: Release $(date +'%Y-%m-%d')
        draft: false
        prerelease: false
    - name: Upload JAR to Release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./backend/target/demo-project-1.0-SNAPSHOT.jar
        asset_name: demo-project-1.0-SNAPSHOT.jar
        asset_content_type: application/java-archive
